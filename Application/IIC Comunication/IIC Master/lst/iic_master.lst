C51 COMPILER V9.51   IIC_MASTER                                                            06/30/2017 19:11:01 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE IIC_MASTER
OBJECT MODULE PLACED IN .\hex\iic_master.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE iic_master.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\iic_master.
                    -lst) TABS(2) OBJECT(.\hex\iic_master.obj)

line level    source

   1          #ifndef _WATCH_DOG_C_
   2          #define _WATCH_DOG_C_
   3          
   4          /*********************************************************************************************************
             -************/
   5          #include "ca51f_config.h"
   6          #if (IC_TYPE == IC_TYPE_CA51F2X)
   7          #include "../../../includes/ca51f2sfr.h"
   8          #include "../../../includes/ca51f2xsfr.h"
   9          #include "../../../includes/gpiodef_f2.h"
  10          #elif (IC_TYPE == IC_TYPE_CA51F3X)
              #include "../../../includes/ca51f3sfr.h"
              #include "../../../includes/ca51f3xsfr.h"
              #include "../../../includes/gpiodef_f3.h"
              #endif
  15          #include "../../../includes/system.h"
  16          #include "../../../Library/includes/uart.h"
  17          #include "../../../Library/includes/i2c.h"
  18          #include "../../../Library/includes/delay.h"
  19          #include "iic_master.h"
  20          #include <intrins.h>
  21          /*********************************************************************************************************
             -************/
  22          unsigned char *pI2CData;
  23          unsigned char RegAddr;
  24          unsigned char I2CDataLengh;
  25          unsigned char I2CDataIndex;
  26          bit iicEnd;
  27          #if (MASTER_MODE == MASTER_READ)
              bit rdSession;
              
              
              unsigned char idata rxBuf[20];
              #elif (MASTER_MODE == MASTER_WRITE)
  33          unsigned char idata txBuf[20];
  34          #endif
  35          
  36          void INT6_ISR(void) interrupt 11 
  37          {
  38   1        unsigned char Sta_Temp;
  39   1      
  40   1      #if (MASTER_MODE == MASTER_WRITE) 
  41   1        if(I2CFLG & I2CF)          //IIC  interrupt
  42   1        {     
  43   2          Sta_Temp = I2CSTA;  
  44   2          if(Sta_Temp == 0x08)          //START condition detected
  45   2          {
  46   3            I2CDAT = I2C_ADDR;                      
  47   3          }
  48   2          else if(Sta_Temp == 0x18)       //Address + Write bit transmitted, ACK received
  49   2          {     
  50   3            I2CDAT = RegAddr;
  51   3            I2CDataIndex = 0;     
  52   3          }
C51 COMPILER V9.51   IIC_MASTER                                                            06/30/2017 19:11:01 PAGE 2   

  53   2          else if(Sta_Temp == 0x28)      //Data byte transmitted/received in master mode, ACK received
  54   2          {
  55   3            if(I2CDataIndex >= I2CDataLengh)
  56   3            {
  57   4              I2CCON |= STP(1); 
  58   4              iicEnd = 1; 
  59   4            }
  60   3            else
  61   3            {
  62   4              I2CDAT = *(pI2CData +I2CDataIndex); 
  63   4              I2CDataIndex++;
  64   4            }               
  65   3          }
  66   2          I2CFLG  |= I2CF;
  67   2        } 
  68   1        
  69   1      #elif (MASTER_MODE == MASTER_READ)    
                if(I2CFLG & I2CF)               //IIC中断
                {     
                  Sta_Temp = I2CSTA;  
                  if(Sta_Temp == 0x08)          //检测到START信号
                  {
                    if(rdSession)
                    {
                      I2CDAT = I2C_ADDR|1;      //主机读阶段， 准备发送从机地址+读位
                    }
                    else
                    {
                      I2CDAT = I2C_ADDR;       //主机写数据阶段，准备发送从机地址+写位
                    }                       
                  }
                  else if(Sta_Temp == 0x18)       //Address + Write bit transmitted, ACK received
                  {     
                    I2CDAT  = RegAddr;          //发送完从机地址+写位后， 准备发送数据寄存器地址
                  }
                  else if(Sta_Temp == 0x28)      //Data byte transmitted/received in master mode, ACK received
                  {
                    if(rdSession)
                    {       
                      if(I2CDataIndex >= I2CDataLengh)
                      {
                        I2CCON |= STP(1);       //所有数据读完， 准备发送STOP信号
                        iicEnd = 1;
                      }
                      else
                      {
                        *(pI2CData+I2CDataIndex) = I2CDAT;
                        I2CDataIndex++;
                        if(I2CDataIndex <= (I2CDataLengh-1))
                        {
                          I2CCON |= AAK(1);               //如果不是最后一字节，预设ACK状态
                        }
                        else
                        {
                          I2CCON &= ~AAK(1);        //如果是最后一字节，不发送ACK
                        }
                      }                   
                    }
                    else
                    {
                      I2CCON |= STA(1); 
                      rdSession = 1;      
C51 COMPILER V9.51   IIC_MASTER                                                            06/30/2017 19:11:01 PAGE 3   

                    }
                  }
                  else if(Sta_Temp == 0x30)      //Data byte transmitted/received in master mode, ACK not received
                  {
                    if(rdSession)
                    {       
                      if(I2CDataIndex >= I2CDataLengh)
                      {
                        I2CCON |= STP(1); 
                        iicEnd = 1;
                      }                   
                    }
                  }
                  else if(Sta_Temp == 0x40)       //Address + Read bit transmitted, ACK received
                  {   
                    I2CCON |= AAK(1); 
                    I2CDataIndex=0;         
                  }
                  else if(Sta_Temp == 0x48)       //Address + Read bit transmitted, no ACK received
                  {   
                    I2CCON |= AAK(1); 
                    I2CDataIndex=0;   
                  } 
                  I2CFLG  |= I2CF;
                }
              #endif
 141   1        if(I2CFLG & I2CSTP)
 142   1        {
 143   2          I2CFLG  |= I2CSTP;  
 144   2        }
 145   1      }         
 146          #if (MASTER_MODE == MASTER_READ)
              void IIC_MasterReadStart(unsigned char *pData,unsigned char regaddr,unsigned char lengh)
              {
                  iicEnd = 0;
                  rdSession = 0;
                  pI2CData  = pData;
                  RegAddr   = regaddr;
                  I2CDataLengh = lengh;
                  I2CCON |= STA(1); 
              }
              
              #elif (MASTER_MODE == MASTER_WRITE)
 158          void IIC_MasterWriteStart(unsigned char *pData,unsigned char regaddr,unsigned char lengh)
 159          {
 160   1          iicEnd = 0;
 161   1          pI2CData  = pData;
 162   1          RegAddr   = regaddr;
 163   1          I2CDataLengh = lengh;
 164   1          I2CCON |= STA(1); 
 165   1      }
 166          #endif
 167          void WaitI2CEnd(void)
 168          {
 169   1        while(!iicEnd);
 170   1        iicEnd = 0;
 171   1      }
 172          void IIC_Master_MainLoop(void)
 173          {
 174   1      #if (IC_TYPE == IC_TYPE_CA51F2X)
 175   1        I2C_SelectComPin(I2C_SEL_P36_P37);
 176   1      #elif (IC_TYPE == IC_TYPE_CA51F3X)
C51 COMPILER V9.51   IIC_MASTER                                                            06/30/2017 19:11:01 PAGE 4   

                I2C_SelectComPin(I2C_SEL_P30_P31);
              #endif
 179   1        
 180   1        I2C_init(I2CE_enable,I2CIE_enable,STFE_enable,I2C_ADDR,20);
 181   1        
 182   1        INT6EN = 1;  
 183   1        while(1)
 184   1        {
 185   2          unsigned char i;
 186   2      #if (MASTER_MODE == MASTER_READ)
                  
                  IIC_MasterReadStart(rxBuf,0,20);
                  WaitI2CEnd();
                  
                  Uart0_PutChar(0xaa);
                  for(i=0;i<I2CDataLengh;i++)
                  {
                    Uart0_PutChar(rxBuf[i]);
                  }
                  Delay_ms(10);
              #elif (MASTER_MODE == MASTER_WRITE)
 198   2          for(i = 0; i < 20; i++)
 199   2          {
 200   3            txBuf[i] = i;
 201   3          }
 202   2          IIC_MasterWriteStart(txBuf,0,20);
 203   2          WaitI2CEnd();
 204   2          Delay_ms(10);
 205   2      #endif
 206   2      
 207   2        }
 208   1      }
 209          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       6
   IDATA SIZE       =     20    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
