C51 COMPILER V9.51   CLOCK                                                                 07/06/2017 20:06:25 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\hex\clock.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE clock.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\clock.lst) TABS(
                    -2) OBJECT(.\hex\clock.obj)

line level    source

   1          #ifndef _IRC_C_
   2          #define _IRC_C_
   3          
   4          /*********************************************************************************************************
             -************/
   5          #include "ca51f_config.h"
   6          #if (IC_TYPE == IC_TYPE_CA51F2X)
   7          #include "../../includes/ca51f2sfr.h"
   8          #include "../../includes/ca51f2xsfr.h"
   9          #include "../../includes/gpiodef_f2.h"
  10          #elif (IC_TYPE == IC_TYPE_CA51F3X)
              #include "../../includes/ca51f3sfr.h"
              #include "../../includes/ca51f3xsfr.h"
              #include "../../includes/gpiodef_f3.h"
              #endif
  15          #include "../../includes/system.h"
  16          #include "../../Library/includes/uart.h"
  17          #include "../../Library/includes/delay.h"
  18          #include "../../Library/includes/system_clock.h"
  19          #include "../../Library/includes/rtc.h"
  20          #include "clock.h"
  21          #include <intrins.h>
  22          /*********************************************************************************************************
             -************/
  23          bit HalfSecFlag;
  24          bit AlarmEvFlag;
  25          void RTC_ISR (void) interrupt 13   
  26          {
  27   1        if(RTCIF & RTC_MF)      //毫秒中断
  28   1        {
  29   2          RTCIF = RTC_MF;     
  30   2        }
  31   1        if(RTCIF & RTC_HF)      //半秒中断
  32   1        {
  33   2          RTCIF = RTC_HF;
  34   2          HalfSecFlag = 1;
  35   2        } 
  36   1        if(RTCIF & RTC_AF)      //闹钟中断
  37   1        {
  38   2          RTCIF = RTC_AF; 
  39   2          AlarmEvFlag = 1;
  40   2        }
  41   1      }                             
  42          void Clock_MainLoop(void)
  43          {
  44   1      #if (IC_TYPE == IC_TYPE_CA51F3X)
                GPIO_Init(P32F,P32_XOSCL_IN_SETTING);
                GPIO_Init(P33F,P33_XOSCL_OUT_SETTING);
              #elif  (IC_TYPE == IC_TYPE_CA51F2X)
  48   1        GPIO_Init(P72F,P72_XOSCL_IN_SETTING);
  49   1        GPIO_Init(P71F,P71_XOSCL_OUT_SETTING);
  50   1      #endif  
  51   1      
  52   1        CKCON |= XLCKE;
C51 COMPILER V9.51   CLOCK                                                                 07/06/2017 20:06:25 PAGE 2   

  53   1        while(!(CKCON & XLSTA));
  54   1        
  55   1        RTC_init(RTCE_On,MSE_Off,HSE_On);
  56   1        
  57   1        Delay_50us(6);    //RTC使能后必须延时300us再写入时间， 否则写入时间可能无效。
  58   1        
  59   1        RTC_WriteHour(12);
  60   1        RTC_WriteMinute(0);
  61   1        RTC_WriteSecond(0);
  62   1        
  63   1        
  64   1        
  65   1        RTC_SetAlaramTime(12,1,0);
  66   1        RTC_AlarmCfg(HCE_On,MCE_On,SCE_On);
  67   1        INT8EN = 1;
  68   1        
  69   1        HalfSecFlag = 0;
  70   1        AlarmEvFlag = 0;
  71   1        while(1)
  72   1        {
  73   2          if(HalfSecFlag)
  74   2          {
  75   3            HalfSecFlag = 0;
  76   3      #ifdef PRINT_EN
  77   3            uart_printf("Hour = %d,Minute = %d,Second = %d\n",(unsigned int)RTCH,(unsigned int)RTCM,(unsigned int)R
             -TCS);  
  78   3      #endif    
  79   3          }
  80   2          if(AlarmEvFlag)
  81   2          {
  82   3            AlarmEvFlag = 0;
  83   3      #ifdef PRINT_EN
  84   3            uart_printf("Alarm event happen!\n"); 
  85   3      #endif    
  86   3          }
  87   2        }
  88   1      }
  89          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
