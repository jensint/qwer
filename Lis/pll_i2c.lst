C51 COMPILER V9.52.0.0   PLL_I2C                                                           07/24/2018 11:06:12 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PLL_I2C
OBJECT MODULE PLACED IN .\Output\pll_i2c.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE User\pll_i2c.c LARGE ROM(COMPACT) BROWSE INCDIR(.\includes;.\User;.\Library
                    -\Includes;.\TS_Lib\Includes) DEBUG OBJECTEXTEND PRINT(.\Lis\pll_i2c.lst) TABS(2) OBJECT(.\Output\pll_i2c.obj)

line level    source

   1          
   2          #include "pll_i2c.h"
   3          
   4          
   5          void delay(uint8_t n)
   6          {
   7   1      //  _nop_();
   8   1      //  while(n)
   9   1      //  {
  10   1      //    n--;
  11   1      //  }
  12   1      }
*** WARNING C280 IN LINE 5 OF User\pll_i2c.c: 'n': unreferenced local variable
  13          
  14          
  15          /******************************************************************************
  16          函数名：  PLL_I2C_Start
  17          功能描述：I2C开始时序
  18          输入参数: 无
  19          返回值：  无
  20          ******************************************************************************/
  21          void PLL_I2C_Start(void)
  22          {
  23   1        SetOutputSCL();
  24   1        SetOutputSDA();
  25   1        PLL_SCL(1);
  26   1        PLL_SDA(1);
  27   1        delay(1);
  28   1        PLL_SDA(0);
  29   1      }
  30          
  31          
  32          
  33          /******************************************************************************
  34          函数名：  PLL_I2C_Stop
  35          功能描述：I2C停止时序
  36          输入参数: 无
  37          返回值：  无
  38          ******************************************************************************/
  39          void PLL_I2C_Stop(void)
  40          {
  41   1        SetOutputSDA();
  42   1        PLL_SCL(0);
  43   1        PLL_SDA(0);
  44   1        delay(1);
  45   1        PLL_SCL(1);
  46   1        delay(1);
  47   1        PLL_SDA(1);
  48   1      }
  49          
  50          
  51          /******************************************************************************
  52          函数名：  PLL_I2C_Ack
  53          功能描述：I2C应答时序
C51 COMPILER V9.52.0.0   PLL_I2C                                                           07/24/2018 11:06:12 PAGE 2   

  54          输入参数: 无
  55          返回值：  无
  56          ******************************************************************************/
  57          void PLL_I2C_Ack(void)
  58          {
  59   1        PLL_SCL(0);
  60   1        SetOutputSDA();
  61   1        delay(0);
  62   1        PLL_SDA(0);
  63   1        delay(1);
  64   1        PLL_SCL(1);
  65   1        delay(1);
  66   1        PLL_SCL(0);
  67   1      }
  68          
  69          
  70          
  71          /******************************************************************************
  72          函数名：  PLL_I2C_NoAck
  73          功能描述：I2C无应答时序
  74          输入参数: 无
  75          返回值：  无
  76          ******************************************************************************/
  77          void PLL_I2C_NoAck(void)
  78          {
  79   1        PLL_SCL(0);
  80   1        SetOutputSDA();
  81   1        PLL_SDA(1);
  82   1        delay(0);
  83   1        PLL_SCL(1);
  84   1        delay(1);
  85   1        PLL_SCL(0);
  86   1      }
  87          
  88          
  89          
  90          /******************************************************************************
  91          函数名：  PLL_I2C_CheckAck
  92          功能描述：等待I2C应答信号
  93          输入参数: 无
  94          返回值：  1:ack  0:nack
  95          ******************************************************************************/
  96          uint8_t PLL_I2C_CheckAck(void)
  97          {
  98   1        uint8_t ack;
  99   1        
 100   1        PLL_SCL(0);
 101   1        SetInputSDA();
 102   1        delay(0);
 103   1        PLL_SCL(1);
 104   1        delay(0);
 105   1        ack = !GetSDA();
 106   1        PLL_SCL(0);
 107   1        return ack;
 108   1      }
 109          
 110          
 111          
 112          /******************************************************************************
 113          函数名：  PLL_I2C_Write_Byte
 114          功能描述：写一个字节数据
 115          输入参数: dat
C51 COMPILER V9.52.0.0   PLL_I2C                                                           07/24/2018 11:06:12 PAGE 3   

 116          返回值：  0:写失败  1:写成功
 117          ******************************************************************************/
 118          uint8_t PLL_I2C_Write_Byte(uint8_t dat)
 119          {
 120   1        uint8_t i;
 121   1        
 122   1        SetOutputSDA();
 123   1        PLL_SCL(0);
 124   1        delay(0);
 125   1        for(i = 0; i < 8; i++)
 126   1        {
 127   2          if(dat & 0x80)
 128   2          {
 129   3            PLL_SDA(1);
 130   3          }
 131   2          else
 132   2          {
 133   3            PLL_SDA(0);
 134   3          }
 135   2          dat <<= 1;
 136   2          PLL_SCL(1);
 137   2          delay(1);
 138   2          PLL_SCL(0);
 139   2        }
 140   1      
 141   1        return PLL_I2C_CheckAck();
 142   1      }
 143          
 144          
 145          /******************************************************************************
 146          函数名：  PLL_I2C_Write_NByte
 147          功能描述：写多个字节数据
 148          输入参数: datbuff,len
 149          返回值：  0:写失败  1:写成功
 150          ******************************************************************************/
 151          uint8_t PLL_I2C_Write_NByte(uint8_t *datbuff, uint8_t len)
 152          {
 153   1        while(len)
 154   1        {
 155   2          len--;
 156   2          if(PLL_I2C_Write_Byte(*datbuff))
 157   2          {
 158   3            datbuff++;
 159   3          }
 160   2          else
 161   2          {
 162   3            return 0;
 163   3          }
 164   2        }
 165   1        return 1;
 166   1      }
 167          
 168          
 169          /******************************************************************************
 170          函数名：  PLL_I2C_Read_Byte
 171          功能描述：读一个字节数据
 172          输入参数: 无
 173          返回值：  数据值
 174          ******************************************************************************/
 175          uint8_t PLL_I2C_Read_Byte(void)
 176          {
 177   1        uint8_t i;
C51 COMPILER V9.52.0.0   PLL_I2C                                                           07/24/2018 11:06:12 PAGE 4   

 178   1        uint8_t dat = 0;
 179   1        
 180   1        PLL_SCL(0);
 181   1        SetInputSDA();
 182   1        
 183   1        for(i = 0; i<8; i++)
 184   1        {
 185   2          dat <<= 1;
 186   2          PLL_SCL(1);
 187   2          if(GetSDA())
 188   2          {
 189   3            dat |= 0x01;
 190   3          }
 191   2          PLL_SCL(0);
 192   2        }
 193   1        SetOutputSDA();
 194   1        
 195   1        return dat;
 196   1      }
 197          
 198          
 199          
 200          /******************************************************************************
 201          函数名：  PLL_I2C_Read_Byte
 202          功能描述：读一个字节数据
 203          输入参数: datbuff,len
 204          返回值：  数据值
 205          ******************************************************************************/
 206          uint8_t PLL_I2C_Read_NByte(uint8_t *datbuff, uint8_t len)
 207          {
 208   1        while(len)
 209   1        {
 210   2          len--;
 211   2          *datbuff = PLL_I2C_Read_Byte();
 212   2          if(len)
 213   2          {
 214   3            PLL_I2C_NoAck();
 215   3          }
 216   2          else
 217   2          {
 218   3            PLL_I2C_NoAck();
 219   3          }
 220   2        }
 221   1        
 222   1        return 1;
 223   1      }
 224          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
